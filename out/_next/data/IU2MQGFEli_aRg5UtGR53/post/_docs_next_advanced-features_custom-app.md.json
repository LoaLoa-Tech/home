{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"---\ndescription: Control page initialization and add a layout that persists for all pages by overriding the default App component used by Next.js.\n---\n\n# Custom `App`\n\nNext.js uses the `App` component to initialize pages. You can override it and control the page initialization. Which allows you to do amazing things like:\n\n- Persisting layout between page changes\n- Keeping state when navigating pages\n- Custom error handling using `componentDidCatch`\n- Inject additional data into pages\n- [Add global CSS](/docs/basic-features/built-in-css-support.md#adding-a-global-stylesheet)\n\nTo override the default `App`, create the file `./pages/_app.js` as shown below:\n\n```jsx\n// import App from 'next/app'\n\nfunction MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n```\n\nThe `Component` prop is the active `page`, so whenever you navigate between routes, `Component` will change to the new `page`. Therefore, any props you send to `Component` will be received by the `page`.\n\n`pageProps` is an object with the initial props that were preloaded for your page by one of our [data fetching methods](/docs/basic-features/data-fetching.md), otherwise it's an empty object.\n\n### Caveats\n\n- If your app is running and you just added a custom `App`, you'll need to restart the development server. Only required if `pages/_app.js` didn't exist before.\n- Adding a custom `getInitialProps` in your `App` will disable [Automatic Static Optimization](/docs/advanced-features/automatic-static-optimization.md) in pages without [Static Generation](/docs/basic-features/data-fetching.md#getstaticprops-static-generation).\n- `App` currently does not support Next.js [Data Fetching methods](/docs/basic-features/data-fetching.md) like [`getStaticProps`](/docs/basic-features/data-fetching.md#getstaticprops-static-generation) or [`getServerSideProps`](/docs/basic-features/data-fetching.md#getserversideprops-server-side-rendering).\n\n### TypeScript\n\nIf youâ€™re using TypeScript, take a look at [our TypeScript documentation](/docs/basic-features/typescript.md#custom-app).\n\n## Related\n\nFor more information on what to do next, we recommend the following sections:\n\n<div class=\"card\">\n  <a href=\"/docs/advanced-features/automatic-static-optimization.md\">\n    <b>Automatic Static Optimization:</b>\n    <small>Next.js automatically optimizes your app to be static HTML whenever possible. Learn how it works here.</small>\n  </a>\n</div>\n\n<div class=\"card\">\n  <a href=\"/docs/advanced-features/custom-error-page.md\">\n    <b>Custom Error Page:</b>\n    <small>Learn more about the built-in Error page.</small>\n  </a>\n</div>\n"}},"__N_SSG":true}