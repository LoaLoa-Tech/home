{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"---\nid: legacy-event-pooling\ntitle: Event Pooling\npermalink: docs/legacy-event-pooling.html\n---\n\n>Note\n>\n>This page is only relevant for React 16 and earlier, and for React Native.\n>\n>React 17 on the web **does not** use event pooling.\n>\n>[Read more](/blog/2020/08/10/react-v17-rc.html#no-event-pooling) about this change in React 17.\n\nThe [`SyntheticEvent`](/docs/events.html) objects are pooled. This means that the `SyntheticEvent` object will be reused and all properties will be nullified after the event handler has been called. For example, this won't work:\n\n```javascript\nfunction handleChange(e) {\n  // This won't work because the event object gets reused.\n  setTimeout(() => {\n    console.log(e.target.value); // Too late!\n  }, 100);\n}\n```\n\nIf you need to access event object's properties after the event handler has run, you need to call `e.persist()`:\n\n```javascript\nfunction handleChange(e) {\n  // Prevents React from resetting its properties:\n  e.persist();\n\n  setTimeout(() => {\n    console.log(e.target.value); // Works\n  }, 100);\n}\n```\n"}},"__N_SSG":true}