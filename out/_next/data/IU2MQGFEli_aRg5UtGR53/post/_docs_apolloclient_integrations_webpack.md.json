{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"---\ntitle: Loading queries with Webpack\n---\n\nYou can load GraphQL queries over `.graphql` files using Webpack. The package `graphql-tag` comes with a loader easy to setup and with some benefits:\n\n1. Do not process GraphQL ASTs on client-side\n2. Enable queries to be separated from logic\n\nIn the example below, we create a new file called `currentUser.graphql`:\n\n```graphql\nquery CurrentUserForLayout {\n  currentUser {\n    login\n    avatar_url\n  }\n}\n```\n\nYou can load this file adding a rule in your webpack config file:\n\n```js\nmodule: {\n  rules: [\n    {\n      test: /\\.(graphql|gql)$/,\n      exclude: /node_modules/,\n      loader: 'graphql-tag/loader',\n    },\n  ],\n},\n```\n\nAs you can see, `.graphql` or `.gql` files will be parsed whenever imported:\n\n```js\nimport React, { Component } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport currentUserQuery from './currentUser.graphql';\n\nclass Profile extends Component { ... }\nProfile.propTypes = { ... };\n\nexport default graphql(currentUserQuery)(Profile)\n```\n\n## Jest\n\n[Jest](https://facebook.github.io/jest/) can't use the Webpack loaders. To make the same transformation work in Jest, use [jest-transform-graphql](https://github.com/remind101/jest-transform-graphql).\n\n## FuseBox\n\n[FuseBox](http://fuse-box.org) can't use the Webpack loaders. To make the same transformation work in FuseBox, use [fuse-box-graphql-plugin](https://github.com/otothea/fuse-box-graphql-plugin).\n\n## React native\n\n[React native](https://facebook.github.io/react-native/) can't use the Webpack loaders. To make the same transformation work in React native, use [babel-plugin-import-graphql](https://github.com/detrohutt/babel-plugin-import-graphql).\n\n## Create-React-App\n\n[create-react-app](https://github.com/facebook/create-react-app/) can't use the Webpack loaders unless ejected. To make the same transformation work in `create-react-app` without ejecting, use [graphql.macro](https://github.com/evenchange4/graphql.macro).\n\n```javascript\nimport { loader } from 'graphql.macro';\nconst currentUserQuery = loader('./currentUser.graphql');\n```\n\n## Fragments\n\nYou can use and include fragments in .graphql files and have webpack include those dependencies for you, similar to how you would use fragments and queries with the gql tag in plain JS.\n\n\n```graphql\n#import \"./UserInfoFragment.graphql\"\n\nquery CurrentUserForLayout {\n  currentUser {\n    ...UserInfo\n  }\n}\n```\n\nSee how we import the UserInfo fragment from another .graphql file (same way you'd import modules in JS).\n\nAnd here's an example of defining the fragment in another .graphql file.\n\n```graphql\nfragment UserInfo on User {\n  login\n  avatar_url\n}\n```\n"}},"__N_SSG":true}