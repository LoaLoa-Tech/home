{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"<!--[meta]\nsection: guides\ntitle: Keystone apps\n[meta]-->\n\n# Keystone apps\n\nA Keystone instance acts as a function of your schema which\ncreates a GraphQL API for querying and an Admin UI for managing your data:\n\n```javascript allowCopy=false showLanguage=false\nschema => ({ GraphQL, AdminUI });\n```\n\n## Introduction\n\nHere, `GraphQL` and `AdminUI` are referred to as **Apps**.\n\nA Keystone **App** has two primary purposes\n\n1. Prepare an `express`-compatible middleware for handling incoming http requests\n2. Provide a `build()` method to create a static production build for this app\n\nAt a minimum a Keystone application requires one app, the [GraphQL API](/packages/app-graphql/README.md):\n\n```javascript title=index.js\nconst { GraphQLApp } = require('@keystonejs/app-graphql');\nconst { Keystone } = require('@keystonejs/keystone');\n\nconst keystone = new Keystone();\n\nmodule.exports = {\n  keystone,\n  apps: [new GraphQLApp()],\n};\n```\n\nMost of the time the `GraphQLApp` will be paired with an `AdminUIApp` which\nprovides the functionality of the Keystone Admin UI:\n\n```diff title=index.js allowCopy=false showLanguage=false\n const { GraphQLApp } = require('@keystonejs/app-graphql');\n const { Keystone } = require('@keystonejs/keystone');\n+const { AdminUIApp } = require('@keystonejs/app-admin-ui');\n\n const keystone = new Keystone();\n\n module.exports = {\n   keystone,\n   apps: [\n     new GraphQLApp(),\n+    new AdminUIApp(),\n   ]\n }\n```\n\nIn both cases, the `keystone dev` and `keystone start` commands will consume the\nexported `.apps` array, making their middleware available in the order the apps\nare specified.\n\nIf you're using a [Custom Server](/docs/guides/custom-server.md), it will be your\nresponsibility to ensure each app's middleware is correctly injected into any\nhttp server you setup.\n\nOther interesting Keystone compatible Apps are:\n\n- [Static App](/packages/app-static/README.md) for serving static files.\n- [Next.js App](/packages/app-next/README.md) for serving a Next.js App on the same server as the API\n\n## Custom apps\n\nIf you need to provide your own custom middleware for your system you can create a custom app and include it in your exported `apps`.\n\n<!-- prettier-ignore-start -->\n\n```javascript title=index.js\nclass CustomApp {\n  prepareMiddleware({ keystone, dev, distDir }) {\n    const middleware = express();\n    return middleware;\n  }\n}\n\nmodule.exports = {\n  keystone,\n  apps: [\n    new GraphQLApp(),\n    new AdminUIApp(),\n    new CustomApp(),\n  ],\n};\n```\n\n<!-- prettier-ignore-end -->\n"}},"__N_SSG":true}