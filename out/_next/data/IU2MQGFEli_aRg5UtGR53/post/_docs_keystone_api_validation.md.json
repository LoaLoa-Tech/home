{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"<!--[meta]\nsection: api\ntitle: Query validation\norder: 6\n[meta]-->\n\n# Query validation\n\nStop maliciously complex or invalid queries against your `Keystone` instance.\n\n```javascript\nconst { validation } = require('@keystonejs/app-graphql');\n\nconst app = new GraphQLApp({\n  apollo: {\n    validationRules: [validation.depthLimit(3)],\n  },\n});\n```\n\n## Validators\n\n- `depthLimit`: limit nesting depth of queries\n- `definitionLimit`: limit number of definitions (queries, fragments, mutations)\n- `fieldLimit`: limit total number of fields returned in results (after expanding fragment spreads)\n\nThe following GraphQL has two definitions (`contact`, `info`), four fields (`name`, `email`, `allUsers`, `friends`), and a total depth of three:\n\n```graphql\nfragment contact on User {\n  name\n  email\n}\nquery info {\n  allUsers {\n    friends {\n      ...contact\n    }\n  }\n}\n```\n"}},"__N_SSG":true}