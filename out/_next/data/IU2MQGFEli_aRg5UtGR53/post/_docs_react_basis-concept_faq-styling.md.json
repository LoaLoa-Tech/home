{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"---\nid: faq-styling\ntitle: Styling and CSS\npermalink: docs/faq-styling.html\nlayout: docs\ncategory: FAQ\n---\n\n### How do I add CSS classes to components? {#how-do-i-add-css-classes-to-components}\n\nPass a string as the `className` prop:\n\n```jsx\nrender() {\n  return <span className=\"menu navigation-menu\">Menu</span>\n}\n```\n\nIt is common for CSS classes to depend on the component props or state:\n\n```jsx\nrender() {\n  let className = 'menu';\n  if (this.props.isActive) {\n    className += ' menu-active';\n  }\n  return <span className={className}>Menu</span>\n}\n```\n\n>Tip\n>\n>If you often find yourself writing code like this, [classnames](https://www.npmjs.com/package/classnames#usage-with-reactjs) package can simplify it.\n\n### Can I use inline styles? {#can-i-use-inline-styles}\n\nYes, see the docs on styling [here](/docs/dom-elements.html#style).\n\n### Are inline styles bad? {#are-inline-styles-bad}\n\nCSS classes are generally better for performance than inline styles.\n\n### What is CSS-in-JS? {#what-is-css-in-js}\n\n\"CSS-in-JS\" refers to a pattern where CSS is composed using JavaScript instead of defined in external files.\n\n_Note that this functionality is not a part of React, but provided by third-party libraries._ React does not have an opinion about how styles are defined; if in doubt, a good starting point is to define your styles in a separate `*.css` file as usual and refer to them using [`className`](/docs/dom-elements.html#classname).\n\n### Can I do animations in React? {#can-i-do-animations-in-react}\n\nReact can be used to power animations. See [React Transition Group](https://reactcommunity.org/react-transition-group/) and [React Motion](https://github.com/chenglou/react-motion) or [React Spring](https://github.com/react-spring/react-spring), for example.\n"}},"__N_SSG":true}