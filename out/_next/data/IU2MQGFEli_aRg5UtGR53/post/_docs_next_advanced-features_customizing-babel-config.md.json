{"pageProps":{"markdownPost":{"name":null,"url":null,"content":"---\ndescription: Extend the babel preset added by Next.js with your own configs.\n---\n\n# Customizing Babel Config\n\n<details>\n  <summary><b>Examples</b></summary>\n  <ul>\n    <li><a href=\"https://github.com/vercel/next.js/tree/canary/examples/with-custom-babel-config\">Customizing babel configuration</a></li>\n  </ul>\n</details>\n\nNext.js includes the `next/babel` preset to your app, which includes everything needed to compile React applications and server-side code. But if you want to extend the default Babel configs, it's also possible.\n\nTo start, you only need to define a `.babelrc` file at the top of your app. If such a file is found, it will be considered as the _source of truth_, and therefore it needs to define what Next.js needs as well, which is the `next/babel` preset.\n\nHere's an example `.babelrc` file:\n\n```json\n{\n  \"presets\": [\"next/babel\"],\n  \"plugins\": []\n}\n```\n\nYou can [take a look at this file](https://github.com/vercel/next.js/blob/canary/packages/next/build/babel/preset.ts) to learn about the presets included by `next/babel`.\n\nTo add presets/plugins **without configuring them**, you can do it this way:\n\n```json\n{\n  \"presets\": [\"next/babel\"],\n  \"plugins\": [\"@babel/plugin-proposal-do-expressions\"]\n}\n```\n\nTo add presets/plugins **with custom configuration**, do it on the `next/babel` preset like so:\n\n```json\n{\n  \"presets\": [\n    [\n      \"next/babel\",\n      {\n        \"preset-env\": {},\n        \"transform-runtime\": {},\n        \"styled-jsx\": {},\n        \"class-properties\": {}\n      }\n    ]\n  ],\n  \"plugins\": []\n}\n```\n\nTo learn more about the available options for each config, visit their documentation site.\n\n> Next.js uses the **current** Node.js version for server-side compilations.\n\n> The `modules` option on `\"preset-env\"` should be kept to `false`, otherwise webpack code splitting is turned off.\n"}},"__N_SSG":true}